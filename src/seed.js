import { ConnectDB, GetDB } from "./config/db.js";
import bcrypt from "bcrypt";

async function seed() {
  await ConnectDB();
  const db = GetDB();

  // ðŸ”’ Hasheamos contraseÃ±as para los usuarios
  const hashUsuario = await bcrypt.hash("usuario123", 10);
  const hashEmpleado = await bcrypt.hash("empleado123", 10);

  // ðŸ‘¤ Usuarios de ejemplo
  const usuarios = [
    {
      email: "cliente@example.com",
      usuario: "ClienteDemo",
      contraseÃ±a: hashUsuario,
      tipo: "usuario",
      creadoEn: new Date(),
    },
    {
      email: "empleado@example.com",
      usuario: "EmpleadoAdmin",
      contraseÃ±a: hashEmpleado,
      tipo: "empleado",
      creadoEn: new Date(),
    },
  ];

  // ðŸŽ® Productos de ejemplo
  const productos = [
    {
      id: "P001",
      nombre: "The Legend of Zelda: Breath of the Wild",
      precio: 59.99,
      cantidad_disponible: 10,
      descripcion: "Juego de aventura y exploraciÃ³n en mundo abierto para Nintendo Switch.",
      creadoEn: new Date(),
    },
    {
      id: "P002",
      nombre: "Elden Ring",
      precio: 69.99,
      cantidad_disponible: 8,
      descripcion: "RPG de acciÃ³n desarrollado por FromSoftware con diseÃ±o de mundo de George R. R. Martin.",
      creadoEn: new Date(),
    },
    {
      id: "P003",
      nombre: "God of War: RagnarÃ¶k",
      precio: 69.99,
      cantidad_disponible: 5,
      descripcion: "Aventura Ã©pica de Kratos y Atreus enfrentando el fin de los tiempos nÃ³rdico.",
      creadoEn: new Date(),
    },
    {
      id: "P004",
      nombre: "Minecraft",
      precio: 29.99,
      cantidad_disponible: 20,
      descripcion: "Juego de construcciÃ³n y supervivencia con mundos generados proceduralmente.",
      creadoEn: new Date(),
    },
    {
      id: "P005",
      nombre: "Cyberpunk 2077",
      precio: 49.99,
      cantidad_disponible: 12,
      descripcion: "RPG futurista ambientado en Night City con mÃºltiples caminos narrativos.",
      creadoEn: new Date(),
    },
  ];

  // ðŸ§¹ Limpiar colecciones previas
  await db.collection("usuarios").deleteMany({});
  await db.collection("productos").deleteMany({});
  await db.collection("carrito").deleteMany({});
  await db.collection("historial").deleteMany({});

  // ðŸ’¾ Insertar nuevos datos
  await db.collection("usuarios").insertMany(usuarios);
  await db.collection("productos").insertMany(productos);

  console.log("âœ… Base de datos poblada con Ã©xito.");
  process.exit();
}

seed();
